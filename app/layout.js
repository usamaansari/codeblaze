"use client"
import { Geist, Geist_Mono } from "next/font/google";
import "./globals.css";
import Header from "@/components/custom/Header";
import { MessagesContext } from "@/context/MessagesContext";
import { useEffect, useState } from "react";
import { UserDetailContext } from "@/context/UserDetailContext";
import { GoogleOAuthProvider } from "@react-oauth/google";
import { PayPalScriptProvider, PayPalButtons } from "@paypal/react-paypal-js";
import axios from "axios";
import { useRouter } from "next/navigation";

const geistSans = Geist({
  variable: "--font-geist-sans",
  subsets: ["latin"],
});

const geistMono = Geist_Mono({
  variable: "--font-geist-mono",
  subsets: ["latin"],
});
{/*
export const metadata = {
  title: "Create Next App",
  description: "Generated by create next app",
};
 */}
export default function RootLayout({ children }) {
  const [messages, setMessages] = useState();
  const [userDetail, setUserDetail] = useState();
  const router = useRouter();
useEffect(()=>{
IsAuthenticated();
},[])
  const IsAuthenticated = async() =>{
    if(typeof window!==undefined)
    {
      const user =JSON.parse(localStorage.getItem('user'));
      const result = await axios.get(`/api/user?email=${user?.email}`);
      console.log(result?.data?.users[0]);
      setUserDetail(result?.data?.users[0]);
    }
  }
  return (
    <html lang="en">
      <body
        className={`${geistSans.variable} ${geistMono.variable} antialiased`}
        suppressHydrationWarning
      >
        <GoogleOAuthProvider clientId={process.env.NEXT_PUBLIC_GOOGLE_AUTH_KEY}>
        <PayPalScriptProvider options={{ clientId: process.env.NEXT_PUBLIC_PAYPAL_CLIENT_ID }}>
        <UserDetailContext.Provider value={{userDetail, setUserDetail}}>
        <MessagesContext.Provider value={{messages, setMessages}} >
        

     
        <Header />
        

        {children}
        </MessagesContext.Provider>
        </UserDetailContext.Provider>
        </PayPalScriptProvider>
        </GoogleOAuthProvider>
      </body>
    </html>
  );
}
